name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
    
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
    
      - name: Debug GitHub Context
        run: |
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Ref: $GITHUB_REF"
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
      - name: Build and Push Docker Image
        run: |
          ECR_url="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"
          echo "ECR_url: $ECR_url"
          docker build -t my-app:1.1 .
          docker tag my-app:1.1 $ECR_url:1.1
          echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" | docker login -u ${{ secrets.AWS_ACCOUNT_ID }} --password-stdin $ECR_url
          docker push $ECR_url:1.1
    
      - name: Deploy to ECS
        run: |
            if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/master" ]; then
              terraform init
              terraform apply -auto-approve
            fi
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}